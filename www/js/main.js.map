{"version":3,"sources":["terminal.js"],"names":["document","addEventListener","querySelector","classList","remove","pairs","Array","from","querySelectorAll","map","toggler","togglees","JSON","parse","dataset","toggle","i","getElementById","el","visible","forEach","_ref","ev","preventDefault","instruction","prev","next","ModalWindow","Swiper","simulateTouch","observer","observeParents","navigation","prevEl","nextEl","element","lining","timeline","arguments","length","undefined","_classCallCheck","this","busy","setState","_createClass","key","value","state","Error","notify","modalState","getState","_this","cb","isState","isBusy","occupy","setTimeout","vacate","_this2","id","modalToggler","modal","_ref2","listener","removeEventListener","open","liningListener","close","CubeImage","openTime","animationProcess","_this3","_this4","cubeEl","cube","getCubePosition","top","height","outTop","outBottom","window","innerHeight","changeCubeState","_cubeEl$getBoundingCl","getBoundingClientRect","SmoothScroll","link","_this5","pause","animation","attr","getAttribute","slice","target","anime","targets","body","documentElement","scrollTop","getCurrentPosition","duration","easing","autoplay","complete","go","scrollY","restart","links","e","console","log"],"mappings":"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","file":"main.js","sourcesContent":["document.addEventListener('DOMContentLoaded', (() => {\n  document.querySelector('html').classList.remove('no-js');\n\n  const pairs = Array.from( document.querySelectorAll('[data-toggle]') ).map(toggler => {\n    const ids = JSON.parse(toggler.dataset.toggle);\n\n    const togglees = ids.map(i => document.getElementById(i));\n\n    return { toggler, togglees };\n  });\n\n  const toggle = (el) => {\n    if(el.dataset.visible == 'true') {\n      el.dataset.visible = false;\n\n      return;\n    }\n\n    el.dataset.visible = true;\n\n    return;\n  }\n\n  pairs.forEach(({ toggler, togglees }) => {\n    toggler.addEventListener('click', (ev) => {\n      ev.preventDefault();\n\n      togglees.forEach(toggle);\n\n      return;\n    });\n  });\n\n  const instruction = document.getElementById('instruction-steps');\n  const prev = document.getElementById('instruction-steps-prev');\n  const next = document.getElementById('instruction-steps-next');\n\n  const options = {\n    simulateTouch: false,\n    observer: true,\n    observeParents: true,\n    navigation: {\n      prevEl: prev,\n      nextEl: next,\n    }\n  }\n\n  const swiper = (() => {\n    return instruction ? new Swiper(instruction, options) : null;\n  })();\n\n  class ModalWindow {\n    constructor(element, lining, timeline = 500) {\n      this.el = element;\n      this.lining = lining;\n      this.timeline = timeline;\n      this.busy = false;\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.modalState = this.state;\n      this.lining.dataset.modalState = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const lining = document.getElementById('lining');\n\n  const modals = Array.from( document.querySelectorAll('[data-modal-toggler]') ).map(el => {\n    const id = el.dataset.modalToggler;\n    const modal = document.getElementById(id);\n\n    return modal ? { toggler: el, modal: new ModalWindow(modal, lining) } : null;\n  });\n\n  modals.forEach(({ toggler, modal }) => {\n    const listener = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', listener);\n\n      modal.open(() => {\n        lining.addEventListener('click', liningListener);\n\n        return;\n      });\n\n    }\n\n    const liningListener = (ev) => {\n      ev.preventDefault();\n\n      lining.removeEventListener('click', liningListener);\n\n      modal.close(() => {\n        toggler.addEventListener('click', listener);\n\n        return;\n      })\n    }\n\n    toggler.addEventListener('click', listener);\n  });\n\n  class CubeImage {\n    constructor(el, openTime = 500) {\n      this.el = el;\n      this.openTime = openTime;\n\n      this.vacate();\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.animationProcess = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const cubeEl = document.querySelector('[data-animation-process]');\n  const cube = new CubeImage(cubeEl);\n\n  const getCubePosition = (top, height) => {\n    const bottom = top + height;\n    const outTop = (top + height * 0.1) < 0;\n    const outBottom = (top + height * 0.9) - window.innerHeight > 0;\n\n    if(outTop || outBottom) {\n      return 'out';\n    } else {\n      return 'in';\n    }\n  }\n\n  const changeCubeState = (ev) => {\n    const { top, height } = cubeEl.getBoundingClientRect();\n\n    window.removeEventListener('scroll', changeCubeState);\n\n    if(cube.isState('closed') && getCubePosition(top, height) === 'in') {\n      cube.open(() => {\n        changeCubeState();\n      });\n\n      return;\n    } else if(cube.isState('open') && getCubePosition(top, height) === 'out') {\n      cube.close(() => {\n        changeCubeState();\n      });\n\n      return;\n    }\n\n    window.addEventListener('scroll', changeCubeState);\n\n    return;\n  }\n\n  changeCubeState();\n\n  class SmoothScroll {\n    constructor(link) {\n      this.link = link;\n\n      const attr = this.link.getAttribute('href');\n\n      if(!attr || attr.slice(0, 1) !== '#') throw new Error('SmoothScroll: Wrong element passed');\n\n      this.target = document.getElementById( attr.slice(1) );\n\n      this.animation = anime({\n        targets: [document.body, document.documentElement],\n        scrollTop: this.getCurrentPosition(),\n        duration: 600,\n        easing: \"easeInOutQuart\",\n        autoplay: false,\n        complete: () => {\n          window.removeEventListener(\"wheel\", this.pause);\n          window.removeEventListener(\"touchstart\", this.pause);\n        }\n      });\n\n      this.link.addEventListener('click', (ev) => {\n        ev.preventDefault();\n\n        this.go();\n      });\n    }\n\n    getCurrentPosition() {\n      return this.target ? (window.scrollY || document.documentElement.scrollTop) + this.target.getBoundingClientRect().top : 0;\n    }\n\n    go() {\n      window.addEventListener(\"wheel\", this.pause);\n      window.addEventListener(\"touchstart\", this.pause);\n\n      this.animation.restart();\n\n      return;\n    }\n\n    pause = () => {\n      this.animation.pause();\n\n      window.removeEventListener(\"wheel\", this.pause);\n      window.removeEventListener(\"touchstart\", this.pause);\n\n      return;\n    }\n\n\n  }\n\n  const links = Array.from( document.querySelectorAll('[data-smooth-scroll]') )\n    .forEach(e => new SmoothScroll(e));\n\n  console.log(links);\n\n}), false);\n"]}