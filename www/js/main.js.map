{"version":3,"sources":["terminal.js"],"names":["document","addEventListener","querySelector","classList","remove","pairs","Array","from","querySelectorAll","map","toggler","onIds","dataset","toggleOn","JSON","parse","offIds","toggleOff","on","i","getElementById","off","forEach","_ref","handler","ev","preventDefault","removeEventListener","anime","targets","opacity","duration","easing","complete","anim","visible","cb","el","bind","e","instruction","prev","next","ModalWindow","Swiper","simulateTouch","observer","observeParents","navigation","prevEl","nextEl","element","lining","timeline","arguments","length","undefined","_classCallCheck","this","listener","busy","setState","_createClass","key","value","state","Error","notify","modalState","getState","_this","isState","isBusy","window","occupy","setTimeout","vacate","_this2","id","modalToggler","modal","_ref2","open","liningListener","close","Animation","openTime","notifyArr","animationProcess","_this3","_this4","cubeEl","cube","text","getCubePosition","top","height","outTop","outBottom","innerHeight","changeCubeState","_cubeEl$getBoundingCl","getBoundingClientRect","SmoothScroll","link","_this5","pause","animation","attr","getAttribute","slice","target","go","scrollY","documentElement","scrollTop","_this6","body","getCurrentPosition","autoplay","restart","reduce","acc","cur","loop","direction","delay"],"mappings":"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","file":"main.js","sourcesContent":["// class VidePlayer {\n//   constructor(frame, toggler, timeline = 500) {\n//     this.frame = frame;\n//     this.toggler = toggler;\n//     this.timeline = 500;\n//\n//     this.loaded = false;\n//     this.busy = false;\n//\n//     this.setState('loading');\n//\n//     this.frameID = frame.getAttribute('id');\n//     if(!this.frameID) throw new Error('VideoPlayer: Specify frame ID');\n//   }\n//\n//   setState(state) {\n//     switch (state) {\n//       case 'loading':\n//         this.state = 'loading';\n//         break;\n//       case 'pause':\n//         this.state = 'pause';\n//         break;\n//       case 'play':\n//         this.state = 'play';\n//         break;\n//       case 'pausing':\n//         this.state = 'pausing';\n//         break;\n//       case 'playing':\n//         this.state = 'playing';\n//         break;\n//       default:\n//         return new Error('VideoPlayer: Wrong State');\n//     }\n//\n//     this.notify();\n//\n//     return this;\n//   }\n//\n//   notify() {\n//     this.frame.dataset.videoPlayerState = this.state;\n//     this.toggler.dataset.videoPlayerState = this.state;\n//   }\n//\n//   getState() {\n//     return this.state;\n//   }\n//\n//   isState(state) {\n//     return this.getState() === state;\n//   }\n//\n//   isBusy() {\n//     return !!this.busy;\n//   }\n//\n//   occupy() {\n//     this.busy = true;\n//   }\n//\n//   vacate() {\n//     this.busy = false;\n//   }\n//\n//   load() {\n//     if(this.loaded) return;\n//\n//     this.loaded = true;\n//\n//     const onPlayerReady = (ev) => {\n//       this.setState('pause');\n//\n//       this.toggler.addEventListener('click', this.play.bind(true));\n//\n//       return;\n//     };\n//\n//     const onPlayerStateChange = (ev) => {\n//       if(ev.data === YT.PlayerState.PAUSED || ev.data === YT.PlayerState.ENDED) {\n//         return this.pause(false);\n//       } else if(ev.data === YT.PlayerState.PLAYING) {\n//         return this.play(false);\n//       }\n//\n//       return;\n//     }\n//\n//     this.player = new YT.Player(this.frame, {\n//       events: {\n//         'onReady': onPlayerReady,\n//         'onStateChange': onPlayerStateChange\n//       }\n//     });\n//\n//     return this;\n//   }\n//\n//   play = (startPlaying, cb = () => {}) => {\n//     if(this.isState('play') || this.isBusy() || !this.loaded) return false;\n//\n//     this.occupy();\n//     this.setState('playing');\n//\n//     if(startPlaying) this.player.playVideo();\n//\n//     setTimeout(() => {\n//       this.setState('play');\n//       this.vacate();\n//\n//\n//       return cb();\n//     }, this.timeline);\n//\n//     return this;\n//\n//     return;\n//   }\n//\n//   pause = (pausePlaying, cb = () => {}) => {\n//     if(this.isState('pause') || this.isBusy() || !this.loaded) return false;\n//\n//     if(pausePlaying) this.player.pauseVideo();\n//\n//     this.occupy();\n//     this.setState('pausing');\n//\n//     setTimeout(() => {\n//       this.setState('pause');\n//       this.vacate();\n//\n//       return cb();\n//     }, this.timeline);\n//\n//     return this;\n//\n//     return;\n//   }\n// }\n//\n// const playerElements = (() => {\n//   let player = document.getElementById('video-player');\n//   let toggler = document.getElementById('video-toggler');\n//\n//   if(!toggler | !player) return undefined;\n//\n//   return { player, toggler };\n// })();\n//\n// const player = new VidePlayer(playerElements.player, playerElements.toggler);\n\n// function onYouTubeIframeAPIReady() {\n//   player.load();\n// };\n\n\ndocument.addEventListener('DOMContentLoaded', (() => {\n  document.querySelector('html').classList.remove('no-js');\n\n  const pairs = Array.from( document.querySelectorAll('[data-toggle-on]') ).map(toggler => {\n    const onIds = toggler.dataset.toggleOn ? JSON.parse(toggler.dataset.toggleOn) : [];\n    const offIds = toggler.dataset.toggleOff ? JSON.parse(toggler.dataset.toggleOff) : [];\n\n    return { toggler, on: onIds.map(i => document.getElementById(i)), off: offIds.map(i => document.getElementById(i)) };\n  });\n\n  const toggle = function (cb, el) {\n    el.dataset.visible = true;\n\n    anime({\n      targets: el,\n      opacity: [0, 1],\n      duration: 500,\n      easing: 'linear',\n      complete: function(anim) {\n        cb();\n      }\n    })\n\n    return;\n  }\n\n  pairs.forEach(({ toggler, on, off }) => {\n    const handler = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', handler);\n\n      anime({\n        targets: toggler,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          toggler.dataset.visible = false;\n\n          const listener = () => {\n            toggler.addEventListener('click', handler);\n          };\n\n          on.forEach(toggle.bind(null, listener));\n        }\n      })\n\n      off.forEach(e => anime({\n        targets: e,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          e.dataset.visible = false;\n        }\n      }))\n\n      return;\n    };\n\n    toggler.addEventListener('click', handler);\n  });\n\n  const instruction = document.getElementById('instruction-steps');\n  const prev = document.getElementById('instruction-steps-prev');\n  const next = document.getElementById('instruction-steps-next');\n\n  const options = {\n    simulateTouch: false,\n    observer: true,\n    observeParents: true,\n    navigation: {\n      prevEl: prev,\n      nextEl: next,\n    }\n  }\n\n  const swiper = (() => {\n    return instruction ? new Swiper(instruction, options) : null;\n  })();\n\n  class ModalWindow {\n    constructor(element, lining, timeline = 500) {\n      this.el = element;\n      this.lining = lining;\n      this.timeline = timeline;\n      this.busy = false;\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.modalState = this.state;\n      this.lining.dataset.modalState = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    listener = (ev) => {\n      ev.preventDefault();\n\n      return;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      window.addEventListener('touchmove', this.listener);\n      window.addEventListener('wheel', this.listener);\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        window.removeEventListener('touchmove', this.listener);\n        window.removeEventListener('wheel', this.listener);\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const lining = document.getElementById('lining');\n\n  const modals = Array.from( document.querySelectorAll('[data-modal-toggler]') ).map(el => {\n    const id = el.dataset.modalToggler;\n    const modal = document.getElementById(id);\n\n    return modal ? { toggler: el, modal: new ModalWindow(modal, lining) } : null;\n  });\n\n  modals.forEach(({ toggler, modal }) => {\n    const listener = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', listener);\n\n      modal.open(() => {\n        lining.addEventListener('click', liningListener);\n\n        return;\n      });\n\n    }\n\n    const liningListener = (ev) => {\n      ev.preventDefault();\n\n      lining.removeEventListener('click', liningListener);\n\n      modal.close(() => {\n        toggler.addEventListener('click', listener);\n\n        return;\n      })\n    }\n\n    toggler.addEventListener('click', listener);\n  });\n\n  class Animation {\n    constructor(el, openTime = 500) {\n      this.el = el;\n      this.openTime = openTime;\n      this.notifyArr = [];\n\n      this.vacate();\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.animationProcess = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const cubeEl = document.querySelector('[data-animation-process-name=\"cube\"]');\n  const cube = new Animation(cubeEl);\n\n  const textEl = document.querySelector('[data-animation-process-name=\"text\"]');\n  const text = new Animation(textEl);\n\n  const getCubePosition = (top, height) => {\n    const bottom = top + height;\n    const outTop = (top + height * 0.1) < 0;\n    const outBottom = (top + height * 0.9) - window.innerHeight > 0;\n\n    if(outTop || outBottom) {\n      return 'out';\n    } else {\n      return 'in';\n    }\n  }\n\n  const changeCubeState = (ev) => {\n    const { top, height } = cubeEl.getBoundingClientRect();\n\n    window.removeEventListener('scroll', changeCubeState);\n\n    if(cube.isState('closed') && getCubePosition(top, height) === 'in') {\n      cube.open(() => {\n        text.open(() => {\n          changeCubeState();\n        });\n      });\n\n      return;\n    } else if(cube.isState('open') && getCubePosition(top, height) === 'out') {\n      text.close(() => {\n        cube.close(() => {\n          changeCubeState();\n        });\n      });\n\n      return;\n    }\n\n    window.addEventListener('scroll', changeCubeState);\n\n    return;\n  }\n\n  changeCubeState();\n\n  class SmoothScroll {\n    constructor(link) {\n      this.link = link;\n\n      const attr = this.link.getAttribute('href');\n\n      if(!attr || attr.slice(0, 1) !== '#') throw new Error('SmoothScroll: Wrong element passed');\n\n      this.target = document.getElementById( attr.slice(1) );\n\n      this.link.addEventListener('click', (ev) => {\n        ev.preventDefault();\n\n        this.go();\n      });\n    }\n\n    getCurrentPosition() {\n      return this.target ? (window.scrollY || document.documentElement.scrollTop) + this.target.getBoundingClientRect().top : 0;\n    }\n\n    go() {\n      this.animation = anime({\n        targets: [document.body, document.documentElement],\n        scrollTop: this.getCurrentPosition(),\n        duration: 600,\n        easing: \"easeInOutQuart\",\n        autoplay: false,\n        complete: () => {\n          window.removeEventListener(\"wheel\", this.pause);\n          window.removeEventListener(\"touchstart\", this.pause);\n        }\n      });\n\n      window.addEventListener(\"wheel\", this.pause);\n      window.addEventListener(\"touchstart\", this.pause);\n\n      this.animation.restart();\n\n      return;\n    }\n\n    pause = () => {\n      this.animation.pause();\n\n      this.animation = null;\n\n      window.removeEventListener(\"wheel\", this.pause);\n      window.removeEventListener(\"touchstart\", this.pause);\n\n      return;\n    }\n  }\n\n  const links = Array.from( document.querySelectorAll('[data-smooth-scroll]') )\n    .forEach(e => new SmoothScroll(e));\n\n  // (function() {\n  //   if(!player) return;\n  //\n  //   const tag = document.createElement('script');\n  //   tag.src = '//www.youtube.com/iframe_api';\n  //\n  //   const firstScriptTag = document.getElementsByTagName('script')[0];\n  //   firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  //\n  //   return;\n  // }());\n\n  const icons = Array.from( document.querySelectorAll('[data-levitate]') ).reduce((acc, cur) => {\n    setTimeout(() => {\n      anime({\n        targets: cur,\n        top: ['10px', '-10px'],\n        loop: true,\n        direction: 'alternate',\n        easing: 'easeInOutCubic',\n        duration: 1000,\n        delay: 0\n      });\n\n      return;\n    }, acc);\n\n    return acc + 200;\n  }, 0);\n\n\n}), false);\n"]}