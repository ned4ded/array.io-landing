{"version":3,"sources":["terminal.js"],"names":["document","addEventListener","querySelector","classList","remove","pairs","Array","from","querySelectorAll","map","toggler","onIds","dataset","toggleOn","JSON","parse","offIds","toggleOff","on","i","getElementById","off","forEach","_ref","handler","ev","preventDefault","removeEventListener","anime","targets","opacity","duration","easing","height","getAttribute","complete","anim","visible","cb","el","bind","e","instruction","prev","next","ModalWindow","Swiper","simulateTouch","observer","observeParents","navigation","prevEl","nextEl","element","lining","timeline","arguments","length","undefined","_classCallCheck","this","listener","busy","setState","_createClass","key","value","state","Error","notify","modalState","getState","_this","isState","isBusy","window","occupy","setTimeout","vacate","_this2","id","modalToggler","modal","_ref2","open","liningListener","close","Animation","openTime","notifyArr","animationProcess","_this3","_this4","cubeEl","cube","text","changeCubeState","top","outTop","outBottom","_cubeEl$getBoundingCl","getBoundingClientRect","innerHeight","SmoothScroll","link","_this5","pause","animation","attr","slice","target","go","scrollY","documentElement","scrollTop","_this6","body","getCurrentPosition","autoplay","restart","reduce","acc","cur","loop","direction","delay"],"mappings":"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","file":"main.js","sourcesContent":["document.addEventListener('DOMContentLoaded', (() => {\n  document.querySelector('html').classList.remove('no-js');\n\n  const pairs = Array.from( document.querySelectorAll('[data-toggle-on]') ).map(toggler => {\n    const onIds = toggler.dataset.toggleOn ? JSON.parse(toggler.dataset.toggleOn) : [];\n    const offIds = toggler.dataset.toggleOff ? JSON.parse(toggler.dataset.toggleOff) : [];\n\n    return { toggler, on: onIds.map(i => document.getElementById(i)), off: offIds.map(i => document.getElementById(i)) };\n  });\n\n  const toggle = function (cb, el) {\n    el.dataset.visible = true;\n\n    if(el.getAttribute('id') == 'ido-more') {\n      anime({\n        targets: el,\n        opacity: [0, 1],\n        height: [0, 350],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          cb();\n        }\n      })\n    } else {\n      anime({\n        targets: el,\n        opacity: [0, 1],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          cb();\n        }\n      })\n    }\n\n    return;\n  }\n\n  pairs.forEach(({ toggler, on, off }) => {\n    const handler = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', handler);\n\n      anime({\n        targets: toggler,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'linear',\n        height: (toggler.getAttribute('id') == 'ido-more') ? [350, 0] : null,\n        complete: function(anim) {\n          toggler.dataset.visible = false;\n\n          const listener = () => {\n            toggler.addEventListener('click', handler);\n          };\n\n          on.forEach(toggle.bind(null, listener));\n        }\n      })\n\n      off.forEach(e => anime({\n        targets: e,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          e.dataset.visible = false;\n        }\n      }))\n\n      return;\n    };\n\n    toggler.addEventListener('click', handler);\n  });\n\n  const instruction = document.getElementById('instruction-steps');\n  const prev = document.getElementById('instruction-steps-prev');\n  const next = document.getElementById('instruction-steps-next');\n\n  const options = {\n    simulateTouch: false,\n    observer: true,\n    observeParents: true,\n    navigation: {\n      prevEl: prev,\n      nextEl: next,\n    }\n  }\n\n  const swiper = (() => {\n    return instruction ? new Swiper(instruction, options) : null;\n  })();\n\n  class ModalWindow {\n    constructor(element, lining, timeline = 500) {\n      this.el = element;\n      this.lining = lining;\n      this.timeline = timeline;\n      this.busy = false;\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.modalState = this.state;\n      this.lining.dataset.modalState = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    listener = (ev) => {\n      ev.preventDefault();\n\n      return;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      window.addEventListener('touchmove', this.listener);\n      window.addEventListener('wheel', this.listener);\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        window.removeEventListener('touchmove', this.listener);\n        window.removeEventListener('wheel', this.listener);\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const lining = document.getElementById('lining');\n\n  const modals = Array.from( document.querySelectorAll('[data-modal-toggler]') ).map(el => {\n    const id = el.dataset.modalToggler;\n    const modal = document.getElementById(id);\n\n    return modal ? { toggler: el, modal: new ModalWindow(modal, lining) } : null;\n  });\n\n  modals.forEach(({ toggler, modal }) => {\n    const listener = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', listener);\n\n      modal.open(() => {\n        lining.addEventListener('click', liningListener);\n\n        return;\n      });\n\n    }\n\n    const liningListener = (ev) => {\n      ev.preventDefault();\n\n      lining.removeEventListener('click', liningListener);\n\n      modal.close(() => {\n        toggler.addEventListener('click', listener);\n\n        return;\n      })\n    }\n\n    toggler.addEventListener('click', listener);\n  });\n\n  class Animation {\n    constructor(el, openTime = 500) {\n      this.el = el;\n      this.openTime = openTime;\n      this.notifyArr = [];\n\n      this.vacate();\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.animationProcess = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const cubeEl = document.querySelector('[data-animation-process-name=\"cube\"]');\n  const cube = new Animation(cubeEl);\n\n  const textEl = document.querySelector('[data-animation-process-name=\"text\"]');\n  const text = new Animation(textEl);\n\n  const getCubePosition = (top, height) => {\n    const bottom = top + height;\n    const outTop = (top + height * 0.1) < 0;\n    const outBottom = (top + height * 0.9) - window.innerHeight > 0;\n\n    if(outTop || outBottom) {\n      return 'out';\n    } else {\n      return 'in';\n    }\n  }\n\n  const changeCubeState = (ev) => {\n    const { top, height } = cubeEl.getBoundingClientRect();\n\n    window.removeEventListener('scroll', changeCubeState);\n\n    if(cube.isState('closed') && getCubePosition(top, height) === 'in') {\n      cube.open(() => {\n        text.open(() => {\n          // changeCubeState();\n        });\n      });\n\n      return;\n    }\n    // } else if(cube.isState('open') && getCubePosition(top, height) === 'out') {\n    //   text.close(() => {\n    //     cube.close(() => {\n    //       changeCubeState();\n    //     });\n    //   });\n    //\n    //   return;\n    // }\n\n    window.addEventListener('scroll', changeCubeState);\n\n    return;\n  }\n\n  changeCubeState();\n\n  class SmoothScroll {\n    constructor(link) {\n      this.link = link;\n\n      const attr = this.link.getAttribute('href');\n\n      if(!attr || attr.slice(0, 1) !== '#') throw new Error('SmoothScroll: Wrong element passed');\n\n      this.target = document.getElementById( attr.slice(1) );\n\n      this.link.addEventListener('click', (ev) => {\n        ev.preventDefault();\n\n        this.go();\n      });\n    }\n\n    getCurrentPosition() {\n      return this.target ? (window.scrollY || document.documentElement.scrollTop) + this.target.getBoundingClientRect().top : 0;\n    }\n\n    go() {\n      this.animation = anime({\n        targets: [document.body, document.documentElement],\n        scrollTop: this.getCurrentPosition(),\n        duration: 600,\n        easing: \"easeInOutQuart\",\n        autoplay: false,\n        complete: () => {\n          window.removeEventListener(\"wheel\", this.pause);\n          window.removeEventListener(\"touchstart\", this.pause);\n        }\n      });\n\n      window.addEventListener(\"wheel\", this.pause);\n      window.addEventListener(\"touchstart\", this.pause);\n\n      this.animation.restart();\n\n      return;\n    }\n\n    pause = () => {\n      this.animation.pause();\n\n      this.animation = null;\n\n      window.removeEventListener(\"wheel\", this.pause);\n      window.removeEventListener(\"touchstart\", this.pause);\n\n      return;\n    }\n  }\n\n  const links = Array.from( document.querySelectorAll('[data-smooth-scroll]') )\n    .forEach(e => new SmoothScroll(e));\n\n\n  const icons = Array.from( document.querySelectorAll('[data-levitate]') ).reduce((acc, cur) => {\n    setTimeout(() => {\n      anime({\n        targets: cur,\n        top: ['10px', '-10px'],\n        loop: true,\n        direction: 'alternate',\n        easing: 'easeInOutCubic',\n        duration: 1000,\n        delay: 0\n      });\n\n      return;\n    }, acc);\n\n    return acc + 200;\n  }, 0);\n\n\n}), false);\n"]}