{"version":3,"sources":["terminal.js"],"names":["document","addEventListener","querySelector","classList","remove","pairs","Array","from","querySelectorAll","map","toggler","togglees","JSON","parse","dataset","toggle","i","getElementById","el","visible","forEach","_ref","ev","preventDefault","instruction","prev","next","ModalWindow","Swiper","simulateTouch","observer","observeParents","navigation","prevEl","nextEl","element","lining","timeline","arguments","length","undefined","_classCallCheck","this","listener","busy","setState","_createClass","key","value","state","Error","notify","modalState","getState","_this","cb","isState","isBusy","window","occupy","setTimeout","vacate","_this2","removeEventListener","id","modalToggler","modal","_ref2","open","liningListener","close","Animation","openTime","notifyArr","animationProcess","_this3","_this4","cubeEl","cube","text","getCubePosition","top","height","outTop","outBottom","innerHeight","changeCubeState","_cubeEl$getBoundingCl","getBoundingClientRect","SmoothScroll","link","_this5","pause","animation","attr","getAttribute","slice","target","go","scrollY","documentElement","scrollTop","_this6","anime","targets","body","getCurrentPosition","duration","easing","autoplay","complete","restart","e","reduce","acc","cur","loop","direction","delay"],"mappings":"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","file":"main.js","sourcesContent":["// class VidePlayer {\n//   constructor(frame, toggler, timeline = 500) {\n//     this.frame = frame;\n//     this.toggler = toggler;\n//     this.timeline = 500;\n//\n//     this.loaded = false;\n//     this.busy = false;\n//\n//     this.setState('loading');\n//\n//     this.frameID = frame.getAttribute('id');\n//     if(!this.frameID) throw new Error('VideoPlayer: Specify frame ID');\n//   }\n//\n//   setState(state) {\n//     switch (state) {\n//       case 'loading':\n//         this.state = 'loading';\n//         break;\n//       case 'pause':\n//         this.state = 'pause';\n//         break;\n//       case 'play':\n//         this.state = 'play';\n//         break;\n//       case 'pausing':\n//         this.state = 'pausing';\n//         break;\n//       case 'playing':\n//         this.state = 'playing';\n//         break;\n//       default:\n//         return new Error('VideoPlayer: Wrong State');\n//     }\n//\n//     this.notify();\n//\n//     return this;\n//   }\n//\n//   notify() {\n//     this.frame.dataset.videoPlayerState = this.state;\n//     this.toggler.dataset.videoPlayerState = this.state;\n//   }\n//\n//   getState() {\n//     return this.state;\n//   }\n//\n//   isState(state) {\n//     return this.getState() === state;\n//   }\n//\n//   isBusy() {\n//     return !!this.busy;\n//   }\n//\n//   occupy() {\n//     this.busy = true;\n//   }\n//\n//   vacate() {\n//     this.busy = false;\n//   }\n//\n//   load() {\n//     if(this.loaded) return;\n//\n//     this.loaded = true;\n//\n//     const onPlayerReady = (ev) => {\n//       this.setState('pause');\n//\n//       this.toggler.addEventListener('click', this.play.bind(true));\n//\n//       return;\n//     };\n//\n//     const onPlayerStateChange = (ev) => {\n//       if(ev.data === YT.PlayerState.PAUSED || ev.data === YT.PlayerState.ENDED) {\n//         return this.pause(false);\n//       } else if(ev.data === YT.PlayerState.PLAYING) {\n//         return this.play(false);\n//       }\n//\n//       return;\n//     }\n//\n//     this.player = new YT.Player(this.frame, {\n//       events: {\n//         'onReady': onPlayerReady,\n//         'onStateChange': onPlayerStateChange\n//       }\n//     });\n//\n//     return this;\n//   }\n//\n//   play = (startPlaying, cb = () => {}) => {\n//     if(this.isState('play') || this.isBusy() || !this.loaded) return false;\n//\n//     this.occupy();\n//     this.setState('playing');\n//\n//     if(startPlaying) this.player.playVideo();\n//\n//     setTimeout(() => {\n//       this.setState('play');\n//       this.vacate();\n//\n//\n//       return cb();\n//     }, this.timeline);\n//\n//     return this;\n//\n//     return;\n//   }\n//\n//   pause = (pausePlaying, cb = () => {}) => {\n//     if(this.isState('pause') || this.isBusy() || !this.loaded) return false;\n//\n//     if(pausePlaying) this.player.pauseVideo();\n//\n//     this.occupy();\n//     this.setState('pausing');\n//\n//     setTimeout(() => {\n//       this.setState('pause');\n//       this.vacate();\n//\n//       return cb();\n//     }, this.timeline);\n//\n//     return this;\n//\n//     return;\n//   }\n// }\n//\n// const playerElements = (() => {\n//   let player = document.getElementById('video-player');\n//   let toggler = document.getElementById('video-toggler');\n//\n//   if(!toggler | !player) return undefined;\n//\n//   return { player, toggler };\n// })();\n//\n// const player = new VidePlayer(playerElements.player, playerElements.toggler);\n\n// function onYouTubeIframeAPIReady() {\n//   player.load();\n// };\n\n\ndocument.addEventListener('DOMContentLoaded', (() => {\n  document.querySelector('html').classList.remove('no-js');\n\n  const pairs = Array.from( document.querySelectorAll('[data-toggle]') ).map(toggler => {\n    const ids = JSON.parse(toggler.dataset.toggle);\n\n    const togglees = ids.map(i => document.getElementById(i));\n\n    return { toggler, togglees };\n  });\n\n  const toggle = (el) => {\n    if(el.dataset.visible == 'true') {\n      el.dataset.visible = false;\n\n      return;\n    }\n\n    el.dataset.visible = true;\n\n    return;\n  }\n\n  pairs.forEach(({ toggler, togglees }) => {\n    toggler.addEventListener('click', (ev) => {\n      ev.preventDefault();\n\n      togglees.forEach(toggle);\n\n      return;\n    });\n  });\n\n  const instruction = document.getElementById('instruction-steps');\n  const prev = document.getElementById('instruction-steps-prev');\n  const next = document.getElementById('instruction-steps-next');\n\n  const options = {\n    simulateTouch: false,\n    observer: true,\n    observeParents: true,\n    navigation: {\n      prevEl: prev,\n      nextEl: next,\n    }\n  }\n\n  const swiper = (() => {\n    return instruction ? new Swiper(instruction, options) : null;\n  })();\n\n  class ModalWindow {\n    constructor(element, lining, timeline = 500) {\n      this.el = element;\n      this.lining = lining;\n      this.timeline = timeline;\n      this.busy = false;\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.modalState = this.state;\n      this.lining.dataset.modalState = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    listener = (ev) => {\n      ev.preventDefault();\n\n      return;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      window.addEventListener('touchmove', this.listener);\n      window.addEventListener('wheel', this.listener);\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        window.removeEventListener('touchmove', this.listener);\n        window.removeEventListener('wheel', this.listener);\n\n        return cb();\n      }, this.timeline);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const lining = document.getElementById('lining');\n\n  const modals = Array.from( document.querySelectorAll('[data-modal-toggler]') ).map(el => {\n    const id = el.dataset.modalToggler;\n    const modal = document.getElementById(id);\n\n    return modal ? { toggler: el, modal: new ModalWindow(modal, lining) } : null;\n  });\n\n  modals.forEach(({ toggler, modal }) => {\n    const listener = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', listener);\n\n      modal.open(() => {\n        lining.addEventListener('click', liningListener);\n\n        return;\n      });\n\n    }\n\n    const liningListener = (ev) => {\n      ev.preventDefault();\n\n      lining.removeEventListener('click', liningListener);\n\n      modal.close(() => {\n        toggler.addEventListener('click', listener);\n\n        return;\n      })\n    }\n\n    toggler.addEventListener('click', listener);\n  });\n\n  class Animation {\n    constructor(el, openTime = 500) {\n      this.el = el;\n      this.openTime = openTime;\n      this.notifyArr = [];\n\n      this.vacate();\n\n      this.setState('closed');\n    }\n\n    setState(state) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      this.notify();\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.animationProcess = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n\n  const cubeEl = document.querySelector('[data-animation-process-name=\"cube\"]');\n  const cube = new Animation(cubeEl);\n\n  const textEl = document.querySelector('[data-animation-process-name=\"text\"]');\n  const text = new Animation(textEl);\n\n  const getCubePosition = (top, height) => {\n    const bottom = top + height;\n    const outTop = (top + height * 0.1) < 0;\n    const outBottom = (top + height * 0.9) - window.innerHeight > 0;\n\n    if(outTop || outBottom) {\n      return 'out';\n    } else {\n      return 'in';\n    }\n  }\n\n  const changeCubeState = (ev) => {\n    const { top, height } = cubeEl.getBoundingClientRect();\n\n    window.removeEventListener('scroll', changeCubeState);\n\n    if(cube.isState('closed') && getCubePosition(top, height) === 'in') {\n      cube.open(() => {\n        text.open(() => {\n          changeCubeState();\n        });\n      });\n\n      return;\n    } else if(cube.isState('open') && getCubePosition(top, height) === 'out') {\n      text.close(() => {\n        cube.close(() => {\n          changeCubeState();\n        });\n      });\n\n      return;\n    }\n\n    window.addEventListener('scroll', changeCubeState);\n\n    return;\n  }\n\n  changeCubeState();\n\n  class SmoothScroll {\n    constructor(link) {\n      this.link = link;\n\n      const attr = this.link.getAttribute('href');\n\n      if(!attr || attr.slice(0, 1) !== '#') throw new Error('SmoothScroll: Wrong element passed');\n\n      this.target = document.getElementById( attr.slice(1) );\n\n      this.link.addEventListener('click', (ev) => {\n        ev.preventDefault();\n\n        this.go();\n      });\n    }\n\n    getCurrentPosition() {\n      return this.target ? (window.scrollY || document.documentElement.scrollTop) + this.target.getBoundingClientRect().top : 0;\n    }\n\n    go() {\n      this.animation = anime({\n        targets: [document.body, document.documentElement],\n        scrollTop: this.getCurrentPosition(),\n        duration: 600,\n        easing: \"easeInOutQuart\",\n        autoplay: false,\n        complete: () => {\n          window.removeEventListener(\"wheel\", this.pause);\n          window.removeEventListener(\"touchstart\", this.pause);\n        }\n      });\n\n      window.addEventListener(\"wheel\", this.pause);\n      window.addEventListener(\"touchstart\", this.pause);\n\n      this.animation.restart();\n\n      return;\n    }\n\n    pause = () => {\n      this.animation.pause();\n\n      this.animation = null;\n\n      window.removeEventListener(\"wheel\", this.pause);\n      window.removeEventListener(\"touchstart\", this.pause);\n\n      return;\n    }\n  }\n\n  const links = Array.from( document.querySelectorAll('[data-smooth-scroll]') )\n    .forEach(e => new SmoothScroll(e));\n\n  // (function() {\n  //   if(!player) return;\n  //\n  //   const tag = document.createElement('script');\n  //   tag.src = '//www.youtube.com/iframe_api';\n  //\n  //   const firstScriptTag = document.getElementsByTagName('script')[0];\n  //   firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  //\n  //   return;\n  // }());\n\n  const icons = Array.from( document.querySelectorAll('[data-levitate]') ).reduce((acc, cur) => {\n    setTimeout(() => {\n      anime({\n        targets: cur,\n        top: ['10px', '-10px'],\n        loop: true,\n        direction: 'alternate',\n        easing: 'easeInOutCubic',\n        duration: 1000,\n        delay: 0\n      });\n\n      return;\n    }, acc);\n\n    return acc + 200;\n  }, 0);\n\n\n}), false);\n"]}